/*Structure of the Node of the BST is as
struct Node
{
	int data;
	Node* left, *right;
};
*/

class Solution{
    
    public:
    // Your are required to complete this function
    // function should return root of the modified BST
    Node* solve(int s, int  e, vector <int> in) {
        if (s > e) {
            return NULL;
        }
        
        int mid = s+(e-s)/2;
        
        Node* node = new Node(in[mid]);
        node -> left = solve(s,mid-1,in);
        node -> right = solve(mid+1,e,in);
        
        return node;
    }
    
    void inorder(Node* root, vector <int> &in) {
        if (root == NULL) {
            return;
        }
        
        inorder(root -> left,in);
        in.push_back(root -> data);
        inorder(root -> right,in);
    }
    
    Node* buildBalancedTree(Node* root)
    {
        vector <int> in;
        inorder(root,in);
        
        int s = 0;
        int e = in.size()-1;
        
        sort(in.begin(),in.end());
        
        return solve(s,e,in);
        
    }
};
