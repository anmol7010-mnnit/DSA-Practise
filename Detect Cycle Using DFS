class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    bool dfs(int node, int parent, vector <int> adj[], int vis[]) {
    
        vis[node] = 1;
        
        for (auto i:adj[node]) {
            if (!vis[i]) {
                if (dfs(i,node,adj,vis)) {
                    return true;
                }
            }
            else if (i != parent) {
                return true;
            }
        }
        
        return false;
    }
    
    bool isCycle(int V, vector<int> adj[]) {
        
        int vis[V] = {0};
        
        for (int i = 0; i < V; i++) {
            if (!vis[i]) {
                if (dfs(i,-1,adj,vis))
                    return true;
            }    
        }
        
        return false;
        
    }
};
