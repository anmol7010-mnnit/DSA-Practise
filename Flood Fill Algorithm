class Solution {
public:
    void dfs(int sr, int sc, int newColor, int iniColor, vector<vector<int>>& image, 
    vector<vector<int>>& ans) {
        int delrow[] = {-1,0,1,0};
        int delCol[] = {0,1,0,-1};
        
        ans[sr][sc] = newColor;
        
        int n = image.size();
        int m = image[0].size();
        
        for (int i = 0; i < 4; i++) {
            int nrow = sr + delrow[i];
            int nCol = sc + delCol[i];
            
            if (nrow >= 0 && nrow < n && nCol >= 0 && nCol < m && image[nrow][nCol] == iniColor
             && ans[nrow][nCol] != newColor) {
                 dfs(nrow,nCol,newColor,iniColor,image,ans);
             }
        }
    }

    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        
        int iniColor = image[sr][sc];
        vector<vector<int>> ans = image;
        
        dfs(sr,sc,newColor,iniColor,image,ans);
        
        return ans;
    }
};
