//User function Template for C++

class Solution {
  public:
    void dfs(int node, int vis[], vector <int> adjLs[]) {
        vis[node] = 1;
        
        for (auto i:adjLs[node]) {
            if (!vis[i]) {
                dfs(i,vis,adjLs);
            }
        }
    }
  
    int numProvinces(vector<vector<int>> adj, int V) {
        
        vector <int> adjLs[V];
        
        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                if (adj[i][j] == 1 && i != j) {
                    adjLs[i].push_back(j);
                    adjLs[j].push_back(i);
                }
            }
        }
        
        int vis[V] = {0};
        int cnt = 0;
        
        for (int i = 0; i < V; i++) {
            if (!vis[i]) {
                cnt++;
                dfs(i,vis,adjLs);
            }
        }
        
        
        return cnt;
    }
};
