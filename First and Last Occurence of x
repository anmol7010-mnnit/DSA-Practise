
int firstOcc(int  arr[], int n, int x) {
        int s = 0, e = n-1;
       
       int ans=-1;
    
        while(s<=e) {
             int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                e = mid - 1;
            }
    
            else if(x > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else
              { e = mid - 1;}
           
    
           
        }
        return ans;
    }
 
    int lastOcc(int arr[], int n, int x) {
        int s = 0, e = n-1;
       
        int ans = -1;
    
        while(s<=e) { int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                s = mid + 1;
            }
    
            else if(x < arr[mid]) {//Right me jao
                 e = mid - 1;
            }
    
            else {//left me jao
                s = mid + 1;
            }
            
        }
        return ans;
    }

vector<int> find(int arr[], int n , int x )
{
    
    int first= firstOcc(arr, n, x); 
    int last =lastOcc(arr, n, x);

    
        return {first,last};

}
int firstOcc(int  arr[], int n, int x) {
        int s = 0, e = n-1;
       
       int ans=-1;
    
        while(s<=e) {
             int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                e = mid - 1;
            }
    
            else if(x > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else
              { e = mid - 1;}
           
    
           
        }
        return ans;
    }
 
    int lastOcc(int arr[], int n, int x) {
        int s = 0, e = n-1;
       
        int ans = -1;
    
        while(s<=e) { int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                s = mid + 1;
            }
    
            else if(x < arr[mid]) {//Right me jao
                 e = mid - 1;
            }
    
            else {//left me jao
                s = mid + 1;
            }
            
        }
        return ans;
    }

vector<int> find(int arr[], int n , int x )
{
    
    int first= firstOcc(arr, n, x); 
    int last =lastOcc(arr, n, x);

    
        return {first,last};

}
int firstOcc(int  arr[], int n, int x) {
        int s = 0, e = n-1;
       
       int ans=-1;
    
        while(s<=e) {
             int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                e = mid - 1;
            }
    
            else if(x > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else
              { e = mid - 1;}
           
    
           
        }
        return ans;
    }
 
    int lastOcc(int arr[], int n, int x) {
        int s = 0, e = n-1;
       
        int ans = -1;
    
        while(s<=e) { int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                s = mid + 1;
            }
    
            else if(x < arr[mid]) {//Right me jao
                 e = mid - 1;
            }
    
            else {//left me jao
                s = mid + 1;
            }
            
        }
        return ans;
    }

vector<int> find(int arr[], int n , int x )
{
    
    int first= firstOcc(arr, n, x); 
    int last =lastOcc(arr, n, x);

    
        return {first,last};

}
int firstOcc(int  arr[], int n, int x) {
        int s = 0, e = n-1;
       
       int ans=-1;
    
        while(s<=e) {
             int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                e = mid - 1;
            }
    
            else if(x > arr[mid]) {//Right me jao
                s = mid + 1;
            }
    
            else
              { e = mid - 1;}
           
    
           
        }
        return ans;
    }
 
    int lastOcc(int arr[], int n, int x) {
        int s = 0, e = n-1;
       
        int ans = -1;
    
        while(s<=e) { int mid = s + (e-s)/2;
            if(arr[mid] == x){
                ans=mid;
                s = mid + 1;
            }
    
            else if(x < arr[mid]) {//Right me jao
                 e = mid - 1;
            }
    
            else {//left me jao
                s = mid + 1;
            }
            
        }
        return ans;
    }

vector<int> find(int arr[], int n , int x )
{
    
    int first= firstOcc(arr, n, x); 
    int last =lastOcc(arr, n, x);

    
        return {first,last};

}
