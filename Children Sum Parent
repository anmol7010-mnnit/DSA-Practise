/*Complete the function below

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/

class Solution{
    public:
    //Function to check whether all nodes of a tree have the value 
    //equal to the sum of their child nodes.
    pair <bool,int> solve(Node* root) {
        
        if (root == NULL) {
            pair <bool,int> p = make_pair(true,0);
            return p;
        }
        
        if (root -> left == NULL && root -> right == NULL) {
            pair <bool,int> p = make_pair(true,root -> data);
            return p;
        }
        
        pair <bool,int> leftAns = solve(root -> left);
        pair <bool,int> rightAns = solve(root -> right);
        
        bool cond = root -> data == leftAns.second + rightAns.second;
        
        pair <bool,int> ans;
        
        if (leftAns.first and rightAns.first and cond) {
            ans.first = true;
            ans.second = root->data;
        }
        else {
            ans.first = false;
        }
        return ans;
    }
    
    int isSumProperty(Node *root)
    {
        
        pair <bool,int> ans = solve(root);
        if (ans.first)
            return 1;
        return 0;
    }
};
